openapi: 3.0.1
info:
  description: API of money-balancer
  title: Money-balancer API
  version: 1.0.0
servers:
- url: /
tags:
- description: User
  name: user
- description: Balance
  name: balance
paths:
  /user:
    get:
      operationId: getUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: detailed information about the user
      security:
      - bearerAuth: []
      summary: get detailed information about the authenticated user
      tags:
      - user
    post:
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreationRequest'
        description: detailed information about the user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: detailed information about the new user
      summary: create a user
      tags:
      - user
  /user/token:
    post:
      operationId: createAuthenticationToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthenticationRequest'
        description: username and password
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAuthenticationToken_200_response'
          description: detailed information about the new user
      summary: create an authentication token
      tags:
      - user
  /balance:
    post:
      operationId: createBalance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceCreationRequest'
        description: detailed information about the balance
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
          description: detailed information about the new balance
        "403":
          description: "the user does not have access to the balance, but they can\
            \ join the balance"
      security:
      - bearerAuth: []
      summary: create a balance
      tags:
      - balance
  /balance/{balanceId}:
    get:
      operationId: getBalance
      parameters:
      - description: id of the balance
        explode: false
        in: path
        name: balanceId
        required: true
        schema:
          format: balanceId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
          description: detailed information about the balance
      security:
      - bearerAuth: []
      summary: get detailed information about a balance
      tags:
      - balance
    post:
      operationId: joinBalance
      parameters:
      - description: id of the balance
        explode: false
        in: path
        name: balanceId
        required: true
        schema:
          format: balanceId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
          description: detailed information about the updated balance
      security:
      - bearerAuth: []
      summary: join a balance
      tags:
      - balance
  /balance/{balanceId}/purchase:
    post:
      parameters:
      - description: id of the balance
        explode: false
        in: path
        name: balanceId
        required: true
        schema:
          format: balanceId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseCreationRequest'
        description: detailed information about the purchase
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
          description: detailed information about the updated balance
      security:
      - bearerAuth: []
      summary: create a pruchase in a balance
      tags:
      - balance
components:
  schemas:
    User:
      example:
        balances:
          "55f2eff62417ee43432fb78763e3405f42e10e56c744601bc2d27c8de7ef91bb": Some
            Balance
          ed9de89ff438915c990cc72eaa95f1753852342603c52645677ef1ee837e9cdd: Another
            Balance
        nickname: nickname
        id: f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670
        username: username
      properties:
        id:
          example: f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670
          format: userId
          type: string
        username:
          type: string
        nickname:
          type: string
        balances:
          additionalProperties:
            description: ids of balances and their names
            type: string
          example:
            "55f2eff62417ee43432fb78763e3405f42e10e56c744601bc2d27c8de7ef91bb": Some
              Balance
            ed9de89ff438915c990cc72eaa95f1753852342603c52645677ef1ee837e9cdd: Another
              Balance
          type: object
      type: object
    PublicUser:
      properties:
        id:
          example: f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670
          format: userId
          type: string
        username:
          type: string
        nickname:
          type: string
      type: object
    UserCreationRequest:
      example:
        password: password
        nickname: nickname
        username: username
      properties:
        username:
          type: string
        nickname:
          type: string
        password:
          type: string
      required:
      - nickname
      - password
      - username
      type: object
    UserAuthenticationRequest:
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
      type: object
    Purchase:
      example:
        amount: 20
        purchaser: 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
        description: Bread
        consumers:
        - f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670
        - 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
        timestamp: 1662533034
      properties:
        timestamp:
          example: 1662533034
          format: unix timetamp
          type: number
        amount:
          description: the amount of money purchased
          example: 20
          format: unsigned long
          type: number
        purchaser:
          description: id of the user who purchased
          example: 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
          format: userId
          type: string
        consumers:
          description: ids of the user who use the purchased good
          example:
          - f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670
          - 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
          items:
            format: userId
            type: string
          type: array
        description:
          example: Bread
          type: string
      type: object
    PurchaseCreationRequest:
      example:
        amount: 20
        description: Bread
        consumers:
        - f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670
        - 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
      properties:
        amount:
          description: the amount of money purchased
          example: 20
          format: unsigned long
          type: number
        consumers:
          description: ids of the user who use the purchased good
          example:
          - f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670
          - 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
          items:
            format: userId
            type: string
          type: array
        description:
          example: Bread
          type: string
      type: object
    Balance:
      example:
        owner: 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
        purchases:
        - amount: 20
          purchaser: 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
          description: Bread
          consumers:
          - f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670
          - 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
          timestamp: 1662533034
        - amount: 20
          purchaser: 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
          description: Bread
          consumers:
          - f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670
          - 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
          timestamp: 1662533034
        name: Some Balance
        id: 55f2eff62417ee43432fb78763e3405f42e10e56c744601bc2d27c8de7ef91bb
        userBalances:
          ? "1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2:f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670"
          : 10
        users:
          f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670:
            id: f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670
            username: alice
            nickname: Alice
          "1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2":
            id: 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
            username: bob
            nickname: Bob
      properties:
        id:
          example: 55f2eff62417ee43432fb78763e3405f42e10e56c744601bc2d27c8de7ef91bb
          type: string
        name:
          example: Some Balance
          type: string
        owner:
          description: id of the user who owns the balance
          example: 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
          format: userId
          type: string
        userBalances:
          additionalProperties:
            description: "The key consists of two userIds concatenated with a colon\
              \ (:), where the first id is the alphabetically smaller one. The value\
              \ is the balance of the first user with the second one. In this example,\
              \ alice ows bob 10, because Bob purchased an item for 20 that is used\
              \ by alice and bob."
            format: unsigned long
            type: number
          example:
            ? "1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2:f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670"
            : 10
          type: object
        users:
          additionalProperties:
            $ref: '#/components/schemas/PublicUser'
          example:
            f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670:
              id: f87165e305b0f7c4824d3806434f9d0909610a25641ab8773cf92a48c9d77670
              username: alice
              nickname: Alice
            "1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2":
              id: 1a1707bb54e5fb4deddd19f07adcb4f1e022ca7879e3c8348da8d4fa496ae8e2
              username: bob
              nickname: Bob
          type: object
        purchases:
          items:
            $ref: '#/components/schemas/Purchase'
          type: array
      type: object
    BalanceCreationRequest:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    createAuthenticationToken_200_response:
      example:
        token: token
      properties:
        token:
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

